<project name="V-Octopus Web Server" default="package" basedir=".">

	<description>
	    Builds the executables for the V-Octopus Web Server.
    </description>
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="classes" />
    <property name="document-root" location="htdocs" />
	<property name="build-temp" location="tmp/classes" />
	<property name="dist" location="dist" />
	<property name="lib.dir" location="lib" />
	<property name="app.name" value="v-octopus-webserver" />
	<property name="user" value="Marcello de Sales (marcello.desales@gmail.com)" />
	<property name="main-class" value="com.googlecode.voctopus.VOctopusWebServer" />
    <property name="version.num" value="0.8"/>
    <buildnumber file="build.num"/>

	 <!-- required libraries - install or predefine --> 
      <property name="aspectjrt.jar"
            location="lib/aspectjrt.jar"/> 
      <property name="aspectjtools.jar"
            location="lib/aspectjtools.jar"/> 
      <property name="aspectjweaver.jar"
            location="lib/aspectjweaver.jar"/> 
	
	<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"> 
      <classpath> 
        <pathelement path="${aspectjtools.jar}"/> 
      </classpath> 
    </taskdef> 
	
	<target name="init">
	    <tstamp />
		<tstamp>
			  <format property="build.dir.day" pattern="MM-dd" />
		  </tstamp>

      <!-- sets name of new task to iajc, old task to ajc --> 
      <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"> 
          <classpath> 
            <pathelement path="${aspectjtools.jar}"/> 
          </classpath> 
      </taskdef> 
	</target>

    <target name="del" description="clean up">
        <delete dir="${build-temp}" />
    </target>

	<patternset id="jar.files">
	    <include name="**/*.xml" />
	</patternset>

	<patternset id="source.files">
		<!-- include everything we want in the src directory
                  that we didn't want in the jar itself -->
		<include name="**/*.java" />
	</patternset>

	<target name="compile" depends="del,init" description="Compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		
		<mkdir dir="${build-temp}" />
		<path id="required.libs">
		    <pathelement location="lib/log4j-1.2.16.jar"/>
		</path>
		
       <!-- can use ajc or iajc here --> 
       <iajc source="1.6" debug="on" destdir="${build-temp}" srcdir="${src}"
            fork="true" forkclasspath="${aspectjtools.jar}">

       	  <classpath refid="required.libs" />
       	  <classpath location="${aspectjrt.jar}" />
       </iajc>

		<copy todir="${build-temp}">
			<fileset dir="${src}">
				<patternset refid="jar.files" />
			</fileset>
		</copy>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<mkdir dir="${dist}" />
		<delete file="${dist}/MANIFEST.MF"/>
		
		<manifest file="${dist}/MANIFEST.MF">
			<attribute name="Manifest-Version" value="1.0" />
			<attribute name="Created-By" value="Marcello de Sales - marcello.desales@gmail.com" />
	        <attribute name="Built-By" value="${user}"/>
	        <attribute name="Main-Class" value="${main-class}"/>
            <attribute name="Class-Path" value="log4j-1.2.16.jar aspectjrt-1.6.10.jar"/> 
	        <attribute name="Implementation-Version" value="${version.num}-b${build.number}"/> 
	    </manifest>

		<property name="jar_build_name" value="${app.name}-${DSTAMP}${TSTAMP}-${version.num}-b${build.number}.jar"/>
		
		<mkdir dir="${dist}/${build.dir.day}"/>
		<jar jarfile="${dist}/${build.dir.day}/${jar_build_name}" 
			 basedir="${build-temp}"
			 manifest="${dist}/MANIFEST.MF"/>
		
		<copy file="${dist}/${build.dir.day}/${jar_build_name}" tofile="${dist}/${app.name}-${version.num}.jar" />
	</target>
	
	<target name="package" depends="dist" description="Package everything and zip the distribution">
		<property name="exec-dir" value="${dist}/exec" />
		<delete dir="${exec-dir}"/>
		
		<mkdir dir="${exec-dir}" description="The executable directory "/>
		<mkdir dir="${exec-dir}/bin" description="The binary file holds the JAR from the server"/>
		<mkdir dir="${exec-dir}/conf" description="The configuration hosts the httpd.conf, mime.types, etc"/>
        <mkdir dir="${exec-dir}/errors" description="Error files 401, 404, 500"/>
		<mkdir dir="${exec-dir}/icons" description="Default icons from the server"/>
		<mkdir dir="${exec-dir}/logs" description="The output from the execution from the server"/>
		<mkdir dir="${exec-dir}/cgi-bin" description="The old-school cgi-bin is now called scripts"/>
		<mkdir dir="${exec-dir}/htdocs" description="The webroot now is the htdocs"/>
		<mkdir dir="${exec-dir}/src" description="The source code from voctopus"/>

		<copy file="lib/log4j-1.2.16.jar" todir="${exec-dir}/bin" />
	    <copy file="lib/aspectjrt.jar" tofile="${exec-dir}/bin/aspectjrt-1.6.10.jar" />

        <copy todir="${exec-dir}/src">
            <fileset dir="${src}">
                <include name="**/*.java" />
                <include name="**/**.aj" />
            	<exclude name="**/httpd/**"/>
            </fileset>
        </copy>
		
        <copy todir="${exec-dir}/errors">
            <fileset dir="errors">
                <include name="**/*.html" />
            </fileset>
        </copy>

		<copy todir="${exec-dir}/icons">
            <fileset dir="icons">
                <include name="**/*.*" />
            </fileset>
        </copy>
		
        <copy todir="${exec-dir}/cgi-bin">
            <fileset dir="cgi-bin">
                <include name="**/*.*" />
            </fileset>
        </copy>
		
        <copy file="${document-root}/index.html" todir="${exec-dir}/htdocs"/>
		<copy file="${document-root}/favicon.ico" todir="${exec-dir}/htdocs"/>
		
		<copy file="${dist}/${app.name}-${version.num}.jar" todir="${exec-dir}/bin"/>
		<delete file="${dist}/${app.name}-${version.num}.jar"/>
		<copy file="conf/mime.types" todir="${exec-dir}/conf" />
		<copy file="conf/httpd.conf" todir="${exec-dir}/conf" />
        <copy file="conf/log4j.properties" todir="${exec-dir}/conf" />
		
		<echo file="${exec-dir}/vocotpus-start.sh">#!/bin/bash
java -Dlog4j.configuration=file:./conf/log4j.properties -jar bin/${app.name}-${version.num}.jar
		</echo>

		<chmod perm="755" file="${exec-dir}/vocotpus-start.sh" />

		<zip destfile="${dist}/${app.name}-${version.num}.zip">
			  <fileset dir="${exec-dir}">
			    <include name="**/*"/>
			  </fileset>
		</zip>
	</target>
	
	<target name="release" depends="package" description="Upload the distribution to google code">
	    <property name="gc.username" value="marcello.sales"/>
	    <property name="gc.password" value="k6c4m9a5"/>
	    <property name="gc.summary" value="vOctopus Web Server supporting ASCII, Directory Listing, and Unknown Files"/>

		<taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" 
        	     classpath="${lib.dir}/ant-googlecode.jar" 
                 name="gcupload"/>
        <gcupload username="${gc.username}" password="${gc.password}" projectname="v-octopus"
                  filename="${dist}/${app.name}-${version.num}.zip" targetfilename="${dist}/${app.name}-${version.num}.zip"
                  summary="${gc.summary}" />
	</target>
	
    <target name="validate" description="perform code validation and checkstyle on modified files in your workspace. Usage: needs to be run before checking in code">
        <ant antfile="checkstyle.xml" target="checkstyle-local"/>
    </target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${dist}" />
	</target>

</project>
